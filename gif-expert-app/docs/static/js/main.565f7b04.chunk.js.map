{"version":3,"sources":["components/AddCategory.js","helpers/getGif.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategorias","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","categoria","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","console","log","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","GifExpertApp","categorias","ReactDOM","render","document","getElementById"],"mappings":"2MAIaA,EAAc,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,cAAkB,EAEPC,mBAAS,IAFF,mBAEpCC,EAFoC,KAExBC,EAFwB,KAmB3C,OAEI,sBAAMC,SAbW,SAACC,GAElBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAc,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OACvCN,EAAc,MAQlB,SACI,uBACIO,KAAO,OACPC,MAAQT,EACRU,SArBe,SAACP,GACxBF,EAAcE,EAAEQ,OAAOF,a,+BCPlBG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACbC,EADa,iDACmCC,UAAUH,GAD7C,+DAEAI,MAAOF,GAFP,cAEbG,EAFa,gBAGEA,EAAKC,OAHP,uBAGZC,EAHY,EAGZA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GACnB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAKQ,EAAIG,OAAOC,iBAAiBZ,QATtB,kBAaZM,GAbY,4CAAH,sDCAPO,EAAc,SAAC,GAAoB,IAAnBJ,EAAkB,EAAlBA,GAAGC,EAAe,EAAfA,MAAMV,EAAS,EAATA,IAGlC,OADAc,QAAQC,IAAIN,EAAGC,EAAMV,GAEjB,sBAAKgB,UAAU,yCAAf,UACI,qBAAKC,IAAMjB,EAAKkB,IAAKR,IACrB,kCAAKA,SCHJS,EAAU,SAAC,GAAiB,IAAhBrB,EAAe,EAAfA,UAAe,ECFZ,SAACA,GAAc,IAAD,EACZd,mBAAS,CAC/BqB,KAAM,GACNe,SAAS,IAHyB,mBAC/BC,EAD+B,KACxBC,EADwB,KAyBtC,OAnBAC,qBAAU,WAGN1B,EAAQC,GACP0B,MAAK,SAAAC,GAGEH,EAAS,CACLjB,KAAMoB,EACNL,SAAS,SAMtB,CAACtB,IAIGuB,EDrBuBK,CAAa5B,GAA/Ba,EAFwB,EAE7BN,KAAYe,EAFiB,EAEjBA,QAMnB,OACI,qCACI,oBAAIJ,UAAW,oCAAf,SAAoDlB,IAEnDsB,GAAW,mBAAGJ,UAAU,mCAAb,qBAGJ,qBAAKA,UAAU,YAAf,SAEIL,EAAOJ,KAAI,SAAAC,GAAG,OACV,cAAC,EAAD,eAEQA,GADEA,EAAIC,aEpB7BkB,EAAe,WAAM,MAIM3C,mBAAS,CAAC,cAJhB,mBAIvB4C,EAJuB,KAIX7C,EAJW,KAW9B,OAAO,qCAEH,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAGA,6BAEQ6C,EAAWrB,KAAI,SAAAT,GAAS,OACxB,cAAC,EAAD,CAEIA,UAAaA,GADPA,YCnB1B+B,IAASC,OAEL,cAAC,EAAD,IAEFC,SAASC,eAAe,W","file":"static/js/main.565f7b04.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nexport const AddCategory = ({setCategorias}) =>{\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n    \r\n    const handleInputChanged = (e) => {\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n\r\n        e.preventDefault()\r\n        if(inputValue.trim().length > 2){\r\n            setCategorias(cats => [ inputValue, ...cats])\r\n            setInputValue('')\r\n        }\r\n\r\n        \r\n    }\r\n\r\n    return (\r\n    \r\n        <form onSubmit={handleSubmit}>\r\n            <input \r\n                type = \"text\"\r\n                value= {inputValue}\r\n                onChange = {handleInputChanged}\r\n            />\r\n        </form>\r\n    )\r\n\r\n\r\n}   \r\n\r\nAddCategory.propTypes = {\r\n    setCategorias: PropTypes.func.isRequired\r\n}","\r\n\r\nexport const getGifs = async(categoria) =>{\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(categoria)}&limit=10&api_key=gNHWPEOUUizvbuJD0jqtxDGzKnA6KumO`\r\n    const resp = await fetch (url);\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map( img =>{\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    return gifs\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({id,title,url}) => {\r\n\r\n    console.log(id,title,url)\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src= {url} alt={title}/>\r\n            <p> {title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React, {useState, useEffect} from 'react'\r\nimport { getGifs } from '../helpers/getGif';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({categoria}) => {\r\n\r\n    const {data:images,loading} = useFetchGifs(categoria);\r\n\r\n\r\n\r\n\r\n   // getGifs();\r\n    return (\r\n        <>\r\n            <h3 className= \"animate__animated animate__fadeIn\">{categoria}</h3>\r\n\r\n            {loading && <p className=\"animate__animated animate__flash\">Loading</p>}\r\n            \r\n        \r\n                    <div className=\"card-grid\"> \r\n                    {\r\n                        images.map(img =>(\r\n                            <GifGridItem \r\n                                key= {img.id}\r\n                                {...img}\r\n                                />\r\n                        ))\r\n                    }\r\n                </div>\r\n            \r\n\r\n         </>\r\n         \r\n    )\r\n}\r\n","import {useState, useEffect} from 'react'\r\nimport { getGifs } from '../helpers/getGif';\r\n\r\nexport const useFetchGifs = (categoria) =>{\r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(()=> {\r\n\r\n\r\n        getGifs(categoria)\r\n        .then(imgs => {\r\n\r\n\r\n                setstate({\r\n                    data: imgs,\r\n                    loading: false\r\n                })\r\n\r\n\r\n\r\n        })\r\n    }, [categoria] )\r\n\r\n\r\n\r\n    return state;//{data:[],loading: true}\r\n\r\n}","import React, {useState} from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    //const categorias = ['One Punch','Samurai X','Dragon Ball']\r\n\r\n    const [categorias, setCategorias] = useState(['One Punch'])\r\n    /*\r\n    const handleAdd = () =>{\r\n        setCategorias( ['hola',...categorias]);\r\n        setCategorias( cats => [...cats, 'HunterXHunter])\r\n    }\r\n    */\r\n    return(<> \r\n\r\n        <h2>GifExpertApp</h2>\r\n        <AddCategory setCategorias={setCategorias}/>\r\n        <hr/>\r\n\r\n        \r\n        <ol>\r\n            {\r\n                categorias.map(categoria =>(\r\n                <GifGrid\r\n                    key= {categoria}\r\n                    categoria = {categoria}\r\n                    />\r\n                ))\r\n            }\r\n        </ol>\r\n    \r\n    \r\n    \r\n    \r\n    </>)\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {GifExpertApp} from './GifExpertApp'\n\n\n\nReactDOM.render(\n  \n    <GifExpertApp />\n  ,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}